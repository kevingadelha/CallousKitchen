@model List<AccountService.SerializableKitchen>
@{
    string[] StorageTypes = { "Fridge", "Freezer", "Pantry", "Cupboard", "Cellar", "Other" };
}
    <div class="row">
        <input type="text" class="form-control" placeholder="Search" id="tbSearchbar"/>
    </div>
@if (Model.Count != 0)
{
    <div class="container">
        @*   @foreach (var kitchen in Model) *@
        @if (Model[0].Inventory.Count() != 0)
        {
            @*hardcoded amount for now, TODO: Change it*@
            @for (int i = 0; i < StorageTypes.Length; i++)
            @* change this! *@
            {
                @if (Model[0].Inventory.Where(x => x.Storage == StorageTypes[i]).Count() != 0)
                {
                    <div class="row">
                        <h4><em>@Model[0].Inventory.Where(x => x.Storage == StorageTypes[i]).FirstOrDefault().Storage</em></h4>
                    </div>
                }




                @foreach (var food in Model[0].Inventory.Where(x => x.Storage == StorageTypes[i]))
                {
                    <div class="foodRow row" data-foodName="@food.Name.ToLower()">
                        <div class="col-8">
                            <div class="row"><h5>@food.Name</h5> </div>
                            <div class="row">@food.Quantity @food.QuantityClassifier</div>
                            @if (food.ExpiryDate != null)
                            {
                                string expiryString = "";
                                DateTime date2 = DateTime.Now.AddDays(3);
                                TimeSpan time = date2 - food.ExpiryDate.Value;

                                if (time.Days == 0)
                                {
                                    expiryString = "expiringSoon";
                                }
                                else if (time.Days >= 0)
                                {
                                    expiryString = "expriringCritical";

                                }
                                else
                                {

                                }
                                <div class="row @expiryString">Expires: @food.ExpiryDate</div>
                            }
                        </div>
                        <div class="col-4">
                            <button type="button" class="btn btn-primary editFoodBtn" data-toggle="modal" data-target="#AddFood" data-food-Id="@food.Id" data-kitchen-Id="@Model[0].Id">Edit</button>
                            <button type="button" class="btn btn-primary eatFoodBtn" data-toggle="modal" data-target="#EatFood" data-food-Id="@food.Id">Eat</button>
                            <button type="button" class="btn btn-danger deleteFoodBtn" data-food-Id="@food.Id">Delete</button>
                        </div>
                    </div>
                }


            }

        }
        else
        {
            <div class="row"><em>You have no food, add some</em></div>

        }
        <div class="row">

            <button type="button" class="btn btn-primary addFoodBtn" data-toggle="modal" data-target="#AddFood" data-kitchen-Id="@Model[0].Id">Add Food</button>

        </div>


    </div>

}
else
{
    <em>You have no kitchens, add one</em>
}
@*@<br />
    <button type="button" id="AddKitchen" class="btn btn-primary" data-toggle="modal" data-target="#KithenModel">Add Kitchen</button>
*@


<div class="modal fade" role="dialog" id="AddFood">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <div id="AddEditFoodBody">
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" role="dialog" id="EatFood">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <div id="EatFoodBody">
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" role="dialog" id="KithenModel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Kitchen</h5>
            </div>
            <div class="modal-body">

                @{ Html.RenderPartial("AddEditKitchenPartial", new KitchenUser { UserId = ViewBag.UserId, kitchen = new Capstone.Classes.Kitchen() });}
            </div>
        </div>
    </div>
</div>

<div class="modal fade" role="dialog" id="RecipeModal">
    <div class="modal-dialog modal-xl" role="document">

        <div class="modal-content">
            <div class="modal-header">Search Recipe</div>
            <div class="modal-body" id="recipeSearchBody">

            </div>
            <div class="modal-footer">
                <div id="edamam-badge" data-color="transparent"></div>

            </div>
        </div>

    </div>
</div>

<div class="modal fade" role="dialog" id="ShoppingListModal">
    <div class="modal-dialog" role="document">

        <div class="modal-content">
            <div class="modal-header">Shopping List</div>
            <div class="modal-body" id="shoppingListBody">

            </div>
        </div>

    </div>
</div>

<script type="text/javascript" src="~/js/User/UserKitchen.js"></script>


